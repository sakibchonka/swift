import Foundation
final class Ref<T> {
    var val: T
    init(_ v: T) {
        val = v
    }
}

struct Box<T> {
    var ref: Ref<T>
    init(_ x: T) {
        ref = Ref(x)
    }
    
    var value: T {
        get {
            return ref.val
        }
        
        set {
            if !isKnownUniquelyReferenced(&ref) {
                ref = Ref(newValue)
                return
            }
            ref.val = newValue
        }
    }
}


var box1 = Box(10)
var box2 = box1

print(box1.value)  // Output: 10
print(box2.value)  // Output: 10

box2.value = 20

print(box1.value)  // Output: 10
print(box2.value)  // Output: 20